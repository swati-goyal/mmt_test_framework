#!/usr/bin/python3


from selenium.webdriver import Chrome, Firefox
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import WebDriverWait
from dateutil.relativedelta import relativedelta
from selenium.common import exceptions
from selenium.webdriver import ActionChains
from selenium.webdriver.common.by import By
from selenium import webdriver
from selenium.webdriver.support.ui import Select
import unittest
import json
import time
from datetime import datetime


class MMTBookingTest(unittest.TestCase):
    driver = Chrome('/usr/local/bin/chromedriver')
    # driver = Firefox()
    url = 'https://www.makemytrip.com/'

    def setUp(self):
        self.driver.get(self.url)
        try:
            self.driver.maximize_window()
        except Exception as e:
            print("Unable to maximize window")
        self.driver.implicitly_wait(2)

    def read_json(self):
        with open('xpath.json') as f:
            data = json.load(f)
        return data

    def test_booking(self):
        data = self.read_json()
        wait = WebDriverWait(self.driver, 2)
        current_date = datetime.now().strftime("%d")
        next_date = (datetime.now() + relativedelta(day=2)).strftime("%d")

        # Select source city
        source = self.driver.find_element_by_xpath(data["home_page"]["source"])
        self.driver.execute_script("arguments[0].scrollIntoView();", source)
        source.clear()
        time.sleep(2)
        source.send_keys("Bang")
        try:
            self.driver.find_element_by_xpath(data["home_page"]["source_city"]).click()
            self.driver.implicitly_wait(5)
        except exceptions.NoSuchElementException:
            print("Invalid Xpath for Source")

        # Select destination city
        destination = self.driver.find_element_by_xpath(data["home_page"]["destination"])
        self.driver.execute_script("arguments[0].scrollIntoView();", destination)
        destination.clear()
        time.sleep(2)
        destination.send_keys("Delh")
        try:
            self.driver.find_element_by_xpath(data["home_page"]["destination_city"]).click()
            self.driver.implicitly_wait(5)
        except exceptions.NoSuchElementException:
            print("Invalid Xpath for Destination")

        self.driver.find_element_by_xpath("//*[@id='js-switch__option']/div[2]").click()

        # Select departure and return date
        try:
            # wait.until(EC.visibility_of_element_located, (By.XPATH, data["home_page"]["depart"]))
            self.driver.find_element_by_xpath(data["home_page"]["depart"]).click()
            depart_dates = self.driver.find_elements_by_xpath(data["home_page"]["depart_date"])
            for date in depart_dates:
                if date.is_enabled() and date.is_displayed() and str(date.get_attribute("text")) == current_date:
                    date.click()
                    self.driver.implicitly_wait(2)

        except exceptions.NoSuchElementException or exceptions.ElementNotVisibleException:
            print("Date is not selected")

        try:
            return_field = self.driver.find_element_by_xpath(data["home_page"]["return"])
            # self.driver.execute_script('document.getElementById("hp-widget__return").removeAttribute("readonly")')
            self.driver.implicitly_wait(1)
            return_field.click()
            rdate = wait.until(EC.element_to_be_clickable((By.XPATH, data["home_page"]["return_date"])))
            if rdate.is_enabled() and rdate.is_displayed() and str(rdate.get_attribute("text")) == next_date:
                ActionChains(self.driver).move_to_element(rdate).perform()
                rdate.click()

            '''
            return_dates = self.driver.find_elements_by_xpath(data["home_page"]["return_date"])
            for date in return_dates:
                if date.is_enabled() and date.is_displayed() and str(date.get_attribute("text")) == next_date:
                    date.click()
                    self.driver.implicitly_wait(2)
            '''

        except exceptions.NoSuchElementException or exceptions.ElementNotVisibleException:
            print("Date is not selected")

        # Click on search button to go the Flight selection page
        self.driver.find_element_by_xpath(data["home_page"]["search"]).click()

        self.assertIsNotNone(self, self.driver.title)

    def tearDown(self):
        pass
        #self.driver.quit()


if __name__ == '__main__':
    unittest.main()